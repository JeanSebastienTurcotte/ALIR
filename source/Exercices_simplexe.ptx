<?xml version="1.0" encoding="UTF-8"?>

<!-- Ce fichier constitue un fichier auxiliaire du livre                     -->
<!--                                                                        -->
<!--      Algèbre linéaire : Intuition et rigueur                           -->
<!--                                                                        -->
<!-- Creative Commons Attribution Share Alike 4.0 International             -->
<!-- CC-BY-4.0                                                              -->
<!-- Jean-Sébastien Turcotte, Philémon Turcotte                             -->

<exercises xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exo-simplexe">   <!-- Ajouter l'identifiant de la section après le - du xml:id -->
    <title> Exercices </title>
    <!-- 
   <exercise xml:id="exo-nom">
    <introduction>
    <p>L'énoncé de l'exercice.</p>
    </introduction>
    <task>
            <statement>
                <p>La première lettre de la question.</p>
            </statement>
            <answer>
                <p> La réponse suivra. </p>
            </answer>
            <solution>
                <p> La solution suivra. </p>
            </solution>
    </task>
    </exercise>
    -->
<exercise xml:id="exo-proglin1">
<introduction>
<p>Pour chaque problème de programmation linéaire ci-dessous, illustrer la région admissible.</p>
</introduction>
<task><statement>
<p>Maximiser <m>f_1(x,y)=3x+2y</m> sous les contraintes
<md>
<mrow>-x+y&amp;\leq 0</mrow>
<mrow>x+5y&amp;\leq 24</mrow>
<mrow>x-7y&amp;\leq -12</mrow>
</md>
et <m>x,y\geq 0</m>.</p>
</statement>
<answer>
<figure xml:id="fig-exo-regionadmissible1">
<caption>La région admissible</caption>
<image xml:id="img-exo-regionadmissible1">
<description>La région admissible est tracée.</description>
<sageplot>
A = matrix([[-1,1], [1,5],[1,-7]])
b = vector([0,24,-12])
c = vector([3,2])
P = InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P.feasible_set().plot()
</sageplot>
</image></figure></answer>
<solution><p>Les trois contraintes d'inégalité forment un triangle, puisque chaque contrainte décrit un demi-plan dans <m>\mathbb{R}^2</m> et que les trois droites bordant les demi-plans s'intersectent deux à deux. Les premières s'intersectent lorsque <m>x=4,y=4</m>. La première et la troisième s'intersectent lorsque <m>x=2,y=2</m>. La deuxième et la troisième s'intersectent lorsque <m>x=9,y=3</m>. La région admissible est illustrée à la figure <xref ref="fig-exo-regionadmissible1"/>.</p></solution>
</task>
<task><statement>
<p>Maximiser <m>f_2(x,y)=x+2y</m> sous les contraintes
<md>
<mrow>-2x+y&amp;\leq -5</mrow>
<mrow>-x+y&amp;\leq -1</mrow>
<mrow>2x+y&amp;\leq 14</mrow>
<mrow>x-3y&amp;\leq 0</mrow>
</md>
et <m>x,y\geq 0</m>.</p>
</statement>
<answer>
<figure xml:id="fig-exo-regionadmissible2">
<caption>La région admissible</caption>
<image xml:id="img-exo-regionadmissible2">
<description>La région admissible est tracée.</description>
<sageplot>
A = matrix([[-2,1], [-1,1],[2,1],[1,-3]])
b = vector([-5,-1,14,0])
c = vector([1,2])
P = InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P.feasible_set().plot()
</sageplot>
</image></figure></answer>
<solution><p>Les quatre contraintes d'inégalité forment un quadrilatère. Les quatre droites bordant les demi-plans s'intersectent deux à deux. Les premières s'intersectent lorsque <m>x=4,y=3</m>. La première et la troisième s'intersectent lorsque <m>x=\frac{19}{4},y=\frac{9}{2}</m>. La première et la quatrième s'intersectent lorsque <m>x=3,y=1</m>. La deuxième et la troisième s'intersectent lorsque <m>x=5,y=4</m>. La deuxième et la quatrième s'intersectent lorsque <m>x=\frac{3}{2},y=\frac{1}{2}</m>. La troisième et la quatrième s'intersectent lorsque <m>x=6,y=2</m>. En tenant compte du sens des inégalités, on élimine l'intersection des contraintes deux et quatre ainsi que l'intersection des contraintes un et trois. La région admissible est illustrée à la figure <xref ref="fig-exo-regionadmissible2"/>.</p></solution>
</task>
<task><statement>
<p>Maximiser <m>f_3(x,y)=-2x+3y</m> sous les contraintes
<md>
<mrow>-x+2y&amp;\leq 3</mrow>
<mrow>3x+y&amp;\geq 26</mrow>
<mrow>x+2y&amp;\geq 12</mrow>
<mrow>x-2y&amp;\leq 8</mrow>
<mrow>x+2y&amp;\leq 21</mrow>
<mrow>3x+y&amp;\leq 38</mrow>
</md>
et <m>x,y\geq 0</m>.</p>
</statement>
<answer><figure xml:id="fig-exo-regionadmissible3">
<caption>La région admissible</caption>
<image xml:id="img-exo-regionadmissible3">
<description>La région admissible est tracée.</description>
<sageplot>
A = matrix([[-1,2], [-3,-1],[-1,-2],[1,-2],[1,2],[3,1]])
b = vector([3,-26,-12,8,21,38])
c = vector([-2,3])
P = InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P.feasible_set().plot()
</sageplot>
</image></figure></answer>
<solution><p>Avec six contraintes qui peuvent potentiellement toutes avoir une intersection prises deux à deux, il y a quinze intersection à déterminer. On se contente de donner les paires dont l'intersection fait partie de la région admissible. La première et la deuxième contrainte s'intersectent lorsque <m>x=7</m> et <m>y=5</m>. La première et la cinquième contrainte s'intersectent quand <m>x=9</m> et <m>y=6</m>. La deuxième et la troisième contrainte s'intersectent lorsque <m>x=8,y=2</m>. La troisième et la quatrième contrainte s'intersectent quand <m>x=10,y=1</m>. La quatrième et la sixième s'intersectent lorsque <m>x=12,y=2</m>. Finalement, la cinquième et la sixième s'intersectent quand <m>x=11,y=5</m>. La région admissible est illustrée à la figure <xref ref="fig-exo-regionadmissible3"/>.</p></solution>
</task>
<task><statement><p>Minimiser <m>f_4(x,y)=x+y</m> sous les contraintes
<md>
<mrow>-2x+5y&amp;\geq 1</mrow>
<mrow>3x+2y&amp;\leq 27</mrow>
<mrow>5x-3y&amp;\geq 7</mrow>
</md>
et <m>x,y\geq 0</m>.</p></statement>
<answer>
<figure xml:id="fig-exo-regionadmissible4">
<caption>La région admissible</caption>
<image xml:id="img-exo-regionadmissible4">
<description>La région admissible est tracée.</description>
<sageplot>
A = matrix([[2,-5],[3,2],[-5,3]])
b = vector([-1,27,-7])
c = vector([1,1])
P = InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P.feasible_set().plot()
</sageplot>
</image></figure>
</answer>
<solution>
<p>La première et la deuxième contrainte s'intersectent en <m>(x,y)=(7,3)</m>, la première et la troisième s'intersectent en <m>(x,y)=(2,1)</m> et la deuxième et la troisième s'intersectent en <m>(x,y)=(5,6)</m>. Ces trois intersections forment un triangle, qui représente la région admissible. Elle est illustrée à la figure <xref ref="fig-exo-regionadmissible4"/>.</p>
</solution>
</task>
</exercise>
<exercise xml:id="exo-proglin2">
<statement><p>Résoudre chacun des problème de l'exercice <xref ref="exo-proglin1"/> à l'aide de la méthode graphique.</p></statement>
<answer><p>La solution optimale se trouve en <m>(9,3)</m> et vaut <m>f_1(9,3)=33</m></p></answer>
<answer><p>La solution optimale se trouve en <m>(5,4)</m> et vaut <m>f_2(5,4)=13</m></p></answer>
<answer><p>La solution optimale se trouve en <m>(7,5)</m> et vaut <m>f_3(7,5)=1</m></p></answer>
<answer><p>La solution optimale se trouve en <m>(2,1)</m> et vaut <m>f_4(2,1)=3</m></p></answer>
<solution><p>Il faut évaluer la fonction objective en chacun des sommets de la région admissible. Puisque
<md>
<mrow>f_1(4,4)&amp;=20</mrow>
<mrow>f_1\left(2,2\right)&amp;=10</mrow>
<mrow>f_1(9,3)&amp;=33</mrow>
</md>,
 la solution optimale est <m>f_1(9,3)=33</m>.</p></solution>
 <solution><p>Il faut évaluer la fonction objective en chacun des sommets de la région admissible. Puisque
<md>
<mrow>f_2(4,3)&amp;=10</mrow>
<mrow>f_2\left(6,2)\right)&amp;=10</mrow>
<mrow>f_2(5,4)&amp;=13</mrow>
<mrow>f_2\left(3,1\right)&amp;=5</mrow>
</md>,
 la solution optimale est <m>f_2(5,4)=13</m>.</p></solution>
 <solution><p>Il faut évaluer la fonction objective en chacun des sommets de la région admissible. Puisque
<md>
<mrow>f_3(7,5)&amp;=1</mrow>
<mrow>f_3(9,6)&amp;=0</mrow>
<mrow>f_3(8,2)&amp;=-10</mrow>
<mrow>f_3(10,1)&amp;=-17</mrow>
<mrow>f_3(12,2)&amp;=-18</mrow>
<mrow>f_3(11,5)&amp;=-7</mrow>
</md>,
 la solution optimale est <m>f_(7,5)=1</m>.</p></solution>
 <solution><p>Il faut évaluer la fonction objective en chacun des sommets de la région admissible. Puisque
<md>
<mrow>f_4(7,3)&amp;=10</mrow>
<mrow>f_4(2,1)&amp;=3</mrow>
<mrow>f_4(5,6)&amp;=11</mrow>
</md>,
 la solution optimale est <m>f_4(2,1)=3</m>.</p></solution>
</exercise>
<exercise xml:id="exo-proglin3">
<statement><p>Écrire chacun des problèmes de l'exercice <xref ref="exo-proglin1"/> sous la forme canonique.</p></statement>
<answer><p>Ce problème est déjà sous la forme canonique.</p></answer>
<answer><p>Ce problème est déjà sous la forme canonique.</p></answer>
<answer><p>Maximiser <m>f_3(x,y)=-2x+3y</m> sous les contraintes
<md>
<mrow>-x+2y&amp;\leq 3</mrow>
<mrow>-3x-y&amp;\leq -26</mrow>
<mrow>-x-2y&amp;\leq 12</mrow>
<mrow>x-2y&amp;\leq 8</mrow>
<mrow>x+2y&amp;\leq 21</mrow>
<mrow>3x+y&amp;\leq 38</mrow>
</md>
et <m>x,y\geq 0</m>.</p></answer>
<solution><p>Comme ce problème est déjà sous la forme canonique, il n'y a rien à faire.</p></solution>
<solution><p>Comme ce problème est déjà sous la forme canonique, il n'y a rien à faire.</p></solution>
<solution><p>Pour qu'un problème soit sous la forme canonique, il faut que ce soit un problème de maximisation et que toutes les contraintes soit des contraintes de la forme <q><m>\leq</m></q>. On a donc: maximiser <m>f_3(x,y)=-2x+3y</m> sous les contraintes
<md>
<mrow>-x+2y&amp;\leq 3</mrow>
<mrow>-3x-y&amp;\leq -26</mrow>
<mrow>-x-2y&amp;\leq 12</mrow>
<mrow>x-2y&amp;\leq 8</mrow>
<mrow>x+2y&amp;\leq 21</mrow>
<mrow>3x+y&amp;\leq 38</mrow>
</md>
et <m>x,y\geq 0</m>.</p></solution>
<solution><p>Pour qu'un problème soit sous la forme canonique, il faut que ce soit un problème de maximisation et que toutes les contraintes soit des contraintes de la forme <q><m>\leq</m></q>. On a donc: maximiser <m>g_4(x,y)=-x-y</m> sous les contraintes
<md>
<mrow>2x-5y&amp;\leq -1</mrow>
<mrow>3x+2y&amp;\leq 27</mrow>
<mrow>-5x+3y&amp;\leq -7</mrow>
</md>
et <m>x,y\geq 0</m>.</p></solution>
</exercise>
<exercise xml:id="exo-proglin4"><statement><p>Résoudre chacun des problème de l'exercice <xref ref="exo-proglin1"/> à l'aide de l'algorithme du simplexe.</p></statement>
<solution>
<p>On commence par créer la matrice initiale du simplexe à l'aide de la forme canonique de l'exercice <xref ref="exo-proglin3"/>. On obtient
<me>
S=\left(\begin{array}{rrrrr|r|r}
-1&amp;1&amp;1&amp;0&amp;0&amp;0&amp;0\\
1&amp; 5&amp;0&amp;1&amp;0&amp;0&amp;24\\
1&amp;-7&amp;0&amp;0&amp;1&amp;1&amp;-12\\
-3&amp;-2&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)
</me>.
Puisque la dernière colonne contient une entrée négative, on doit, dans un premier temps, pivoter sur la ligne trois avant de faire l'algorithme. La seule variable négative est <m>y</m>, on effectue ainsi le pivotage selon l'entrée en position <m>3,2</m>, ce qui donne
<md>
<mrow>\left(\begin{array}{rrrrr|r|r}
-1&amp;1&amp;1&amp;0&amp;0&amp;0&amp;0\\
1&amp; 5&amp;0&amp;1&amp;0&amp;0&amp;24\\
1&amp;-7&amp;0&amp;0&amp;1&amp;0&amp;-12\\
-3&amp;-2&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)&amp;\begin{array}{c} -\frac{1}{7}L_3\to L_3\sim\end{array}\left(\begin{array}{rrrrr|r|r}
-1&amp;1&amp;1&amp;0&amp;0&amp;0&amp;0\\
1&amp; 5&amp;0&amp;1&amp;0&amp;0&amp;24\\
-\frac{1}{7}&amp;1&amp;0&amp;0&amp;-\frac{1}{7}&amp;\frac{1}{7}&amp;\frac{12}{7}\\
-3&amp;-2&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_1-L_3\to L_3\\ L_2-5L_3\to L_2\\ L_4+2L_3\to L_4\sim\end{array}\left(\begin{array}{rrrrr|r|r}
-\frac{6}{7}&amp;0&amp;1&amp;0&amp;\frac{1}{7}&amp;0&amp;-\frac{12}{7}\\
\frac{12}{7}&amp; 0&amp;0&amp;1&amp;\frac{5}{7}&amp;0&amp;\frac{108}{7}\\
-\frac{1}{7}&amp;1&amp;0&amp;0&amp;-\frac{1}{7}&amp;0&amp;\frac{12}{7}\\
-\frac{23}{7}&amp;0&amp;0&amp;0&amp;-\frac{2}{7}&amp;1&amp;\frac{24}{7}
\end{array}\right)</mrow>
</md>.
La première entrée de la dernière colonne est, à son tour, négative. On pivote selon l'entrée en position <m>1,1</m> pour la rendre positive.
<md>
<mrow>\left(\begin{array}{rrrrr|r|r}
-\frac{6}{7}&amp;0&amp;1&amp;0&amp;\frac{1}{7}&amp;0&amp;-\frac{12}{7}\\
\frac{12}{7}&amp; 0&amp;0&amp;1&amp;\frac{5}{7}&amp;0&amp;\frac{108}{7}\\
-\frac{1}{7}&amp;1&amp;0&amp;0&amp;-\frac{1}{7}&amp;0&amp;\frac{12}{7}\\
-\frac{23}{7}&amp;0&amp;0&amp;0&amp;-\frac{2}{7}&amp;1&amp;\frac{24}{7}
\end{array}\right)&amp;\begin{array}{c}-\frac{7}{6}L_1/\to L_1\sim\end{array}\left(\begin{array}{rrrrr|r|r}
1&amp;0&amp;-\frac{7}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
\frac{12}{7}&amp; 0&amp;0&amp;1&amp;\frac{5}{7}&amp;0&amp;\frac{108}{7}\\
-\frac{1}{7}&amp;1&amp;0&amp;0&amp;-\frac{1}{7}&amp;0&amp;\frac{12}{7}\\
-\frac{23}{7}&amp;0&amp;0&amp;0&amp;-\frac{2}{7}&amp;1&amp;\frac{24}{7}
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_2-\frac{12}{7}L_1\to L_2 \\ L_3+\frac{1}{7}L_1\to L_3 \\ L_4+\frac{23}{7}L_1\to L_1\sim\end{array}\left(\begin{array}{rrrrr|r|r}
1&amp;0&amp;-\frac{7}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp; 0&amp;2&amp;1&amp;1&amp;0&amp;12\\
0&amp;1&amp;-\frac{1}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp;0&amp;-\frac{23}{6}&amp;0&amp;-\frac{5}{6}&amp;1&amp;10
\end{array}\right)</mrow>
</md>.
</p>
<p>À présent, l'algorithme du simplexe, au sens usuel, peut commencer. La plus petite entrée de la dernière ligne se trouve dans la colonne trois. Le pivotage s'effetue donc par rapport à la première variable d'écart. La seule entrée positive dans cette colonne est à la ligne deux. C'est par rapport à cette ligne que s'effectuera le pivotage. On obtient
<md>
<mrow>\left(\begin{array}{rrrrr|r|r}
1&amp;0&amp;-\frac{7}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp; 0&amp;2&amp;1&amp;1&amp;0&amp;12\\
0&amp;1&amp;-\frac{1}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp;0&amp;-\frac{23}{6}&amp;0&amp;-\frac{5}{6}&amp;1&amp;10
\end{array}\right)&amp;\begin{array}{c} \frac{1}{2}L_2\to L_2\sim \end{array}\left(\begin{array}{rrrrr|r|r}
1&amp;0&amp;-\frac{7}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp; 0&amp;1&amp;\frac{1}{2}&amp;\frac{1}{2}&amp;0&amp;6\\
0&amp;1&amp;-\frac{1}{6}&amp;0&amp;-\frac{1}{6}&amp;0&amp;2\\
0&amp;0&amp;-\frac{23}{6}&amp;0&amp;-\frac{5}{6}&amp;1&amp;10
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_1+\frac{7}{6}L_2\to L_1 \\ L_3+\frac{1}{6}L_2\to L_3 \\ L_4+\frac{23}{6}L_2\to L_4\sim \end{array}\left(\begin{array}{rrrrr|r|r}
1&amp;0&amp;0&amp;\frac{7}{12}&amp;\frac{5}{12}&amp;0&amp;9\\
0&amp; 0&amp;1&amp;\frac{1}{2}&amp;\frac{1}{2}&amp;0&amp;6\\
0&amp;1&amp;0&amp;\frac{1}{12}&amp;-\frac{1}{12}&amp;0&amp;3\\
0&amp;0&amp;0&amp;\frac{23}{12}&amp;\frac{13}{12}&amp;1&amp;33
\end{array}\right)</mrow>
</md>.
À ce stade, toutes les entrées de la dernière lignes sont positives. L'algorithme se termine, offrant comme solution optimale la valeur <m>33</m>, atteinte lorsque <m>x=9</m> et <m>y=3</m>, ce qui correspond à la solution obtenue à l'exercice <xref ref="exo-proglin2"/>.
</p>
</solution>
<solution><p>On commence par créer la matrice initiale du simplexe à l'aide de la forme canonique de l'exercice <xref ref="exo-proglin3"/>. On obtient
<me>
S=\left(\begin{array}{rrrrrr|r|r}
-2&amp;1&amp;1&amp;0&amp;0&amp;0&amp;0&amp;-5\\
-1&amp;1&amp;0&amp;1&amp;0&amp;0&amp;0&amp;-1\\
2&amp;1&amp;0&amp;0&amp;1&amp;0&amp;0&amp;14\\
1&amp;-3&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0\\
-1&amp;-2&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)
</me>. Cette matrice contient deux entrées négatives dans la dernière colonne. On doit d'abord les éliminer avant de procéder avec l'algorithme du simplexe. Pour optimiser le nombre d'étapes, on choisit de pivoter dans la première ligne, puisque <m>(-5)/(-2)\geq (-2)/(-1)</m> et dans la première colonne, seule valeur négative de la ligne. Cela rendra la valeur dans la deuxième ligne également positive. Ainsi, on a
<md>
<mrow>\left(\begin{array}{rrrrrr|r|r}
-2&amp;1&amp;1&amp;0&amp;0&amp;0&amp;0&amp;-5\\
-1&amp;1&amp;0&amp;1&amp;0&amp;0&amp;0&amp;-1\\
2&amp;1&amp;0&amp;0&amp;1&amp;0&amp;0&amp;14\\
1&amp;-3&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0\\
-1&amp;-2&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)&amp;\begin{array}{c}-\frac{1}{2}L_1\to L_1\sim\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;-\frac{1}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;0&amp;\frac{5}{2}\\
-1&amp;1&amp;0&amp;1&amp;0&amp;0&amp;0&amp;-1\\
2&amp;1&amp;0&amp;0&amp;1&amp;0&amp;0&amp;14\\
1&amp;-3&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0\\
-1&amp;-2&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c} L_2+L_1\to L_2\\ L_3+2L_1\to L_3\\ L_4-L_1\to L_4\\ L_5+L_1\to L_5\sim \end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;-\frac{1}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;0&amp;\frac{5}{2}\\
0&amp;\frac{1}{2}&amp;-\frac{1}{2}&amp;1&amp;0&amp;0&amp;0&amp;\frac{3}{2}\\
0&amp;2&amp;1&amp;0&amp;1&amp;0&amp;0&amp;9\\
0&amp;-\frac{5}{2}&amp;\frac{1}{2}&amp;0&amp;0&amp;1&amp;0&amp;-\frac{5}{2}\\
0&amp;-\frac{5}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;1&amp;\frac{5}{2}
\end{array}\right)</mrow>
</md>. Une nouvelle entrée négative est apparue à la ligne quatre. L'entrée de la deuxième colonne est négative et est choisie pour faire le pivotage. On a
<md>
<mrow>\left(\begin{array}{rrrrrr|r|r}
1&amp;-\frac{1}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;0&amp;\frac{5}{2}\\
0&amp;\frac{1}{2}&amp;-\frac{1}{2}&amp;1&amp;0&amp;0&amp;0&amp;\frac{1}{2}\\
0&amp;2&amp;1&amp;0&amp;1&amp;0&amp;0&amp;9\\
0&amp;-\frac{5}{2}&amp;\frac{1}{2}&amp;0&amp;0&amp;1&amp;0&amp;-\frac{5}{2}\\
0&amp;-\frac{5}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;1&amp;\frac{5}{2}
\end{array}\right)&amp;\begin{array}{c}-\frac{2}{5}L_4\to L_4 \\ \sim\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;-\frac{1}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;0&amp;\frac{5}{2}\\
0&amp;\frac{1}{2}&amp;-\frac{1}{2}&amp;1&amp;0&amp;0&amp;0&amp;\frac{1}{2}\\
0&amp;2&amp;1&amp;0&amp;1&amp;0&amp;0&amp;9\\
0&amp;1&amp;-\frac{1}{5}&amp;0&amp;0&amp;-\frac{2}{5}&amp;0&amp;1\\
0&amp;-\frac{5}{2}&amp;-\frac{1}{2}&amp;0&amp;0&amp;0&amp;1&amp;\frac{5}{2}
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_1+\frac{1}{2}L_4\to L_1\\ L_2-\frac{1}{2}L_4\to L_2\\ L_3-2L_4\to L_3\\ L_5+\frac{5}{2}L_4\to L_5\\ \sim\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;-\frac{3}{5}&amp;0&amp;0&amp;-\frac{1}{5}&amp;0&amp;3\\
0&amp;0&amp;-\frac{2}{5}&amp;1&amp;0&amp;\frac{1}{5}&amp;0&amp;1\\
0&amp;0&amp;\frac{7}{5}&amp;0&amp;1&amp;\frac{4}{5}&amp;0&amp;7\\
0&amp;1&amp;-\frac{1}{5}&amp;0&amp;0&amp;-\frac{2}{5}&amp;0&amp;1\\
0&amp;0&amp;-1&amp;0&amp;0&amp;-1&amp;1&amp;5
\end{array}\right)</mrow>
</md>.
À présent, l'algorithme du simplexe peut commencer. Il y a deux valeurs négatives dans la dernières lignes et celles-ci valent la même chose. On choisit la valeur dans la troisième colonne. Il n'y a qu'une entrée positive dans cette colonne, le pivotage s'effectue selon l'entrée en position  <m>3,3</m>. On obtient
<md>
<mrow>\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;-\frac{3}{5}&amp;0&amp;0&amp;-\frac{1}{5}&amp;0&amp;3\\
0&amp;0&amp;-\frac{2}{5}&amp;1&amp;0&amp;\frac{1}{5}&amp;0&amp;0\\
0&amp;0&amp;\frac{7}{5}&amp;0&amp;1&amp;\frac{4}{5}&amp;0&amp;7\\
0&amp;1&amp;-\frac{1}{5}&amp;0&amp;0&amp;-\frac{2}{5}&amp;0&amp;1\\
0&amp;0&amp;-1&amp;0&amp;0&amp;-1&amp;1&amp;5
\end{array}\right)&amp;\begin{array}{c}\frac{5}{7}L_3\to L_3 \\ \sim\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;-\frac{3}{5}&amp;0&amp;0&amp;-\frac{1}{5}&amp;0&amp;3\\
0&amp;0&amp;-\frac{2}{5}&amp;1&amp;0&amp;\frac{1}{5}&amp;0&amp;0\\
0&amp;0&amp;1&amp;0&amp;\frac{5}{7}&amp;\frac{4}{7}&amp;0&amp;5\\
0&amp;1&amp;-\frac{1}{5}&amp;0&amp;0&amp;-\frac{2}{5}&amp;0&amp;1\\
0&amp;0&amp;-1&amp;0&amp;0&amp;-1&amp;1&amp;5
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_1+\frac{3}{5}L_3\to L_1\\ L_2+\frac{2}{5}L_3\to L_2\\ L_4+\frac{1}{5}L_3\to L_4\\ L_5+L_3\to L_5\\ \sim\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;0&amp;0&amp;\frac{3}{7}&amp;\frac{1}{7}&amp;0&amp;6\\
0&amp;0&amp;0&amp;1&amp;\frac{2}{7}&amp;\frac{3}{7}&amp;0&amp;3\\
0&amp;0&amp;1&amp;0&amp;\frac{5}{7}&amp;\frac{4}{7}&amp;0&amp;5\\
0&amp;1&amp;0&amp;0&amp;\frac{1}{7}&amp;-\frac{2}{7}&amp;0&amp;2\\
0&amp;0&amp;0&amp;0&amp;\frac{5}{7}&amp;-\frac{3}{7}&amp;1&amp;10
\end{array}\right)</mrow>
</md>, qui possède encore une entrée négative dans la dernière ligne. Dans la colonne correspondante, il y a trois valeurs positives. Celle ayant le plus petit rapport avec la colonne des <m>b_i</m>, comme prescrit dans l'algorithme <xref ref="algo-simplexe"/>, est l'entrée dans la ligne deux. On pivote alors pour obtenir
<md>
<mrow>\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;0&amp;0&amp;\frac{3}{7}&amp;\frac{1}{7}&amp;0&amp;6\\
0&amp;0&amp;0&amp;1&amp;\frac{2}{7}&amp;\frac{3}{7}&amp;0&amp;2\\
0&amp;0&amp;1&amp;0&amp;\frac{5}{7}&amp;\frac{4}{7}&amp;0&amp;5\\
0&amp;1&amp;0&amp;0&amp;\frac{1}{7}&amp;-\frac{2}{7}&amp;0&amp;2\\
0&amp;0&amp;0&amp;0&amp;\frac{5}{7}&amp;-\frac{3}{7}&amp;1&amp;10
\end{array}\right)&amp;\begin{array}{c}\frac{7}{3}L_2\to L_2\end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;0&amp;0&amp;\frac{3}{7}&amp;\frac{1}{7}&amp;0&amp;6\\
0&amp;0&amp;0&amp;\frac{7}{3}&amp;\frac{2}{3}&amp;1&amp;0&amp;7\\
0&amp;0&amp;1&amp;0&amp;\frac{5}{7}&amp;\frac{4}{7}&amp;0&amp;5\\
0&amp;1&amp;0&amp;0&amp;\frac{1}{7}&amp;-\frac{2}{7}&amp;0&amp;2\\
0&amp;0&amp;0&amp;0&amp;\frac{5}{7}&amp;-\frac{3}{7}&amp;1&amp;10
\end{array}\right)</mrow>
<mrow>&amp;\begin{array}{c}L_1-\frac{1}{7}L_2\to L_2\\ L_3-\frac{4}{7}L_2\to L_3\\ L_4+\frac{2}{7}L_2\to L_4\\ L_5+\frac{3}{7}L_2\to L_5\\ \sim \end{array}\left(\begin{array}{rrrrrr|r|r}
1&amp;0&amp;0&amp;-\frac{1}{3}&amp;\frac{1}{3}&amp;0&amp;0&amp;5\\
0&amp;0&amp;0&amp;\frac{7}{3}&amp;\frac{2}{3}&amp;1&amp;0&amp;7\\
0&amp;0&amp;1&amp;-\frac{4}{3}&amp;\frac{1}{3}&amp;0&amp;0&amp;1\\
0&amp;1&amp;0&amp;\frac{2}{3}&amp;\frac{1}{3}&amp;0&amp;0&amp;4\\
0&amp;0&amp;0&amp;1&amp;1&amp;0&amp;1&amp;13
\end{array}\right)</mrow>
</md>.
L'algoritme se termine, offrant comme solution maximale la valeur <m>13</m>, atteinte lorsque <m>x=5</m> et <m>y=4</m>, comme trouvé à l'exercice <xref ref="exo-proglin2"/>.
</p></solution>
<solution><p>On commence par créer la matrice initiale du simplexe à l'aide de la forme canonique de l'exercice <xref ref="exo-proglin3"/>. On obtient
<me>
S=\left(\begin{array}{rrrrrrrr|r|r}
-1&amp;2&amp;1&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;3\\
-3&amp;-1&amp;0&amp;1&amp;0&amp;0&amp;0&amp;0&amp;0&amp;-26\\
-1&amp;-2&amp;0&amp;0&amp;1&amp;0&amp;0&amp;0&amp;0&amp;12\\
1&amp;-2&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0&amp;0&amp;8\\
1&amp;2&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0&amp;0&amp;21\\
3&amp;1&amp;0&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0&amp;38\\
2&amp;-3&amp;0&amp;0&amp;0&amp;0&amp;0&amp;0&amp;1&amp;0
\end{array}\right)
</me>.
L'entrée de la deuxième ligne et de la dernière colonne contient est négative. On pivote sur l'entrée en position <m>2,1</m> afin de la rendre positive. On a
<md>
<mrow> \left(\begin{array}{rrrrrrrrrr}
-1 &amp; 2 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 3 \\
-3 &amp; -1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; -26 \\
-1 &amp; -2 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 12 \\
1 &amp; -2 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 8 \\
1 &amp; 2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 21 \\
3 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 38 \\
2 &amp; -3 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0
\end{array}\right) &amp; \begin{array}{c} -\frac{1}{3}L_{2} \to L_{2} \\ \sim \end{array} \left(\begin{array}{rrrrrrrrrr}
-1 &amp; 2 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 3 \\
1 &amp; \frac{1}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{26}{3} \\
-1 &amp; -2 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 12 \\
1 &amp; -2 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 8 \\
1 &amp; 2 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 21 \\
3 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 38 \\
2 &amp; -3 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0
\end{array}\right) </mrow>
<mrow>&amp; \begin{array}{c} L_{1} + 1L_{1} \to L_{1} \\ L_{3} + 1L_{3} \to L_{3} \\ L_{4} - 1L_{4} \to L_{4} \\ L_{5} - 1L_{5} \to L_{5} \\ L_{6} - 3L_{6} \to L_{6} \\ L_{7} - 2L_{7} \to L_{7} \\ \sim \end{array} \left(\begin{array}{rrrrrrrrrr}
0 &amp; \frac{7}{3} &amp; 1 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{35}{3} \\
1 &amp; \frac{1}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{26}{3} \\
0 &amp; -\frac{5}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{62}{3} \\
0 &amp; -\frac{7}{3} &amp; 0 &amp; \frac{1}{3} &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -\frac{2}{3} \\
0 &amp; \frac{5}{3} &amp; 0 &amp; \frac{1}{3} &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; \frac{37}{3} \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; -\frac{11}{3} &amp; 0 &amp; \frac{2}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; -\frac{52}{3}
\end{array}\right) </mrow>
</md>, qui contient à nouveau une valeur négative dans la dernière colonne, à la quatrième ligne. Un pivotage selon l'entrée <m>4,2</m> la rendra positive. On obtient
<md>

<mrow> \left(\begin{array}{rrrrrrrrrr}
0 &amp; \frac{7}{3} &amp; 1 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{35}{3} \\
1 &amp; \frac{1}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{26}{3} \\
0 &amp; -\frac{5}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{62}{3} \\
0 &amp; -\frac{7}{3} &amp; 0 &amp; \frac{1}{3} &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -\frac{2}{3} \\
0 &amp; \frac{5}{3} &amp; 0 &amp; \frac{1}{3} &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; \frac{37}{3} \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; -\frac{11}{3} &amp; 0 &amp; \frac{2}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; -\frac{52}{3}
\end{array}\right) &amp; \begin{array}{c} -\frac{3}{7}L_{4} \to L_{4} \\ \sim \end{array} \left(\begin{array}{rrrrrrrrrr}
0 &amp; \frac{7}{3} &amp; 1 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{35}{3} \\
1 &amp; \frac{1}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{26}{3} \\
0 &amp; -\frac{5}{3} &amp; 0 &amp; -\frac{1}{3} &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \frac{62}{3} \\
0 &amp; 1 &amp; 0 &amp; -\frac{1}{7} &amp; 0 &amp; -\frac{3}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{2}{7} \\
0 &amp; \frac{5}{3} &amp; 0 &amp; \frac{1}{3} &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; \frac{37}{3} \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; -\frac{11}{3} &amp; 0 &amp; \frac{2}{3} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; -\frac{52}{3}
\end{array}\right) </mrow>

<mrow>&amp; \begin{array}{c} L_{1} - \frac{7}{3}L_{4} \to L_{1} \\ L_{2} - \frac{1}{3}L_{4} \to L_{2} \\ L_{3} + \frac{5}{3}L_{4} \to L_{3} \\ L_{5} - \frac{5}{3}L_{4} \to L_{5} \\ L_{7} + \frac{11}{3}L_{4} \to L_{7} \\ \sim \end{array} \left(\begin{array}{rrrrrrrrrr}
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 11 \\
1 &amp; 0 &amp; 0 &amp; -\frac{2}{7} &amp; 0 &amp; \frac{1}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{60}{7} \\
0 &amp; 0 &amp; 0 &amp; -\frac{4}{7} &amp; 1 &amp; -\frac{5}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{148}{7} \\
0 &amp; 1 &amp; 0 &amp; -\frac{1}{7} &amp; 0 &amp; -\frac{3}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{2}{7} \\
0 &amp; 0 &amp; 0 &amp; \frac{4}{7} &amp; 0 &amp; \frac{5}{7} &amp; 1 &amp; 0 &amp; 0 &amp; \frac{83}{7} \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; 0 &amp; 0 &amp; \frac{1}{7} &amp; 0 &amp; -\frac{11}{7} &amp; 0 &amp; 0 &amp; 1 &amp; -\frac{114}{7}
\end{array}\right) </mrow>
</md>.
Toutes les entrées de la section du vecteur <m>\vec{b}</m> sont positives. L'algorithme du simplexe peut débuter. L'entrée de la dernière ligne et de la sixième colonne est négative. Dans la colonne six, parmi les entrées positives, celle qui offre le plus petit ratio avec la colonne des <m>b_i</m> se trouve dans la ligne un. Cette ligne est choisie pour pivoter. On a
<md>
<mrow> \left(\begin{array}{rrrrrrrrrr}
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 11 \\
1 &amp; 0 &amp; 0 &amp; -\frac{2}{7} &amp; 0 &amp; \frac{1}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{60}{7} \\
0 &amp; 0 &amp; 0 &amp; -\frac{4}{7} &amp; 1 &amp; -\frac{5}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{148}{7} \\
0 &amp; 1 &amp; 0 &amp; -\frac{1}{7} &amp; 0 &amp; -\frac{3}{7} &amp; 0 &amp; 0 &amp; 0 &amp; \frac{2}{7} \\
0 &amp; 0 &amp; 0 &amp; \frac{4}{7} &amp; 0 &amp; \frac{5}{7} &amp; 1 &amp; 0 &amp; 0 &amp; \frac{83}{7} \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; 0 &amp; 0 &amp; \frac{1}{7} &amp; 0 &amp; -\frac{11}{7} &amp; 0 &amp; 0 &amp; 1 &amp; -\frac{114}{7}
\end{array}\right) &amp; \begin{array}{c} L_{5} - \frac{5}{7}L_{1} \to L_{5} \\ L_{2} - \frac{1}{7}L_{1} \to L_{2} \\ L_{3} + \frac{5}{7}L_{1} \to L_{3} \\ L_{4} + \frac{3}{7}L_{1} \to L_{4} \\ L_{7} + \frac{11}{7}L_{1} \to L_{7} \\ \sim \end{array} \left(\begin{array}{rrrrrrrrrr}
0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 11 \\
1 &amp; 0 &amp; -\frac{1}{7} &amp; -\frac{2}{7} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 7 \\
0 &amp; 0 &amp; \frac{5}{7} &amp; -\frac{4}{7} &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 29 \\
0 &amp; 1 &amp; \frac{3}{7} &amp; -\frac{1}{7} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 5 \\
0 &amp; 0 &amp; -\frac{5}{7} &amp; \frac{4}{7} &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 4 \\
0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 12 \\
0 &amp; 0 &amp; \frac{11}{7} &amp; \frac{1}{7} &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 1
\end{array}\right) </mrow>
</md>,
qui ne contient que des entrées positives dans la dernière ligne. L'algoritme est terminé et offre comme solution la valeur maximale <m>1</m>, atteinte lorsque <m>(x,y)=(7,5)</m>.
</p></solution>
<solution><p>On commence par écrire la matrice initiale du simplexe à l'aide de la forme canonique de l'exercice <xref ref="exo-proglin3"/>. On obtient
<me>
S=\left(\begin{array}{rrrrrrr}
2&amp;-5&amp;1&amp;0&amp;0&amp;0&amp;-1\\
3&amp;2&amp;0&amp;1&amp;0&amp;0&amp;27\\
-5&amp;3&amp;0&amp;0&amp;1&amp;0&amp;-7\\
1&amp;1&amp;0&amp;0&amp;0&amp;1&amp;0\\
\end{array}\right)
</me>.
On applique l'algorithme du simplexe dual. D'abord, on pivote sur l'entrée en position <m>(3,1)</m>.
<md>
<mrow> \left(\begin{array}{rrrrrrr}
2 &amp; -5 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -1 \\
3 &amp; 2 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 27 \\
-5 &amp; 3 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; -7 \\
1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0
\end{array}\right) &amp; \begin{array}{c} -\frac{1}{5}L_{3} \to L_{3} \\ \sim \end{array} \left(\begin{array}{rrrrrrr}
2 &amp; -5 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; -1 \\
3 &amp; 2 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 27 \\
1 &amp; -\frac{3}{5} &amp; 0 &amp; 0 &amp; -\frac{1}{5} &amp; 0 &amp; \frac{7}{5} \\
1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0
\end{array}\right) </mrow>
<mrow>&amp; \begin{array}{c} L_{1} - 2L_{1} \to L_{1} \\ L_{2} - 3L_{2} \to L_{2} \\ L_{4} - 1L_{4} \to L_{4} \\ \sim \end{array} \left(\begin{array}{rrrrrrr}
0 &amp; -\frac{19}{5} &amp; 1 &amp; 0 &amp; \frac{2}{5} &amp; 0 &amp; -\frac{19}{5} \\
0 &amp; \frac{19}{5} &amp; 0 &amp; 1 &amp; \frac{3}{5} &amp; 0 &amp; \frac{114}{5} \\
1 &amp; -\frac{3}{5} &amp; 0 &amp; 0 &amp; -\frac{1}{5} &amp; 0 &amp; \frac{7}{5} \\
0 &amp; \frac{8}{5} &amp; 0 &amp; 0 &amp; \frac{1}{5} &amp; 1 &amp; -\frac{7}{5}
\end{array}\right) </mrow>
<intertext>On pivote sur l'entrée en position <m>1,2</m>.</intertext>
<mrow>&amp; \begin{array}{c} -\frac{5}{19}L_{1} \to L_{1} \\ \sim \end{array} \left(\begin{array}{rrrrrrr}
0 &amp; 1 &amp; -\frac{5}{19} &amp; 0 &amp; -\frac{2}{19} &amp; 0 &amp; 1 \\
0 &amp; \frac{19}{5} &amp; 0 &amp; 1 &amp; \frac{3}{5} &amp; 0 &amp; \frac{114}{5} \\
1 &amp; -\frac{3}{5} &amp; 0 &amp; 0 &amp; -\frac{1}{5} &amp; 0 &amp; \frac{7}{5} \\
0 &amp; \frac{8}{5} &amp; 0 &amp; 0 &amp; \frac{1}{5} &amp; 1 &amp; -\frac{7}{5}
\end{array}\right) </mrow>
<mrow>&amp; \begin{array}{c} L_{3} + \frac{3}{5}L_{1} \to L_{3} \\ L_{2} - \frac{19}{5}L_{1} \to L_{2} \\ L_{4} - \frac{8}{5}L_{1} \to L_{4} \\ \sim \end{array} \left(\begin{array}{rrrrrrr}
0 &amp; 1 &amp; -\frac{5}{19} &amp; 0 &amp; -\frac{2}{19} &amp; 0 &amp; 1 \\
0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 &amp; 0 &amp; 19 \\
1 &amp; 0 &amp; -\frac{3}{19} &amp; 0 &amp; -\frac{5}{19} &amp; 0 &amp; 2 \\
0 &amp; 0 &amp; \frac{8}{19} &amp; 0 &amp; \frac{7}{19} &amp; 1 &amp; -3
\end{array}\right) </mrow>
</md>.
La dernière ligne ne contenant que des entrées positives sous le bloc principale, l'algorithme se termine. Le problème dual de maximisation a pour solution optimale <m>-3</m>, atteinte lorsque <m>x=2</m> et <m>y=1</m>. La solution au problème primal est ainsi <m>f_4(2,1)=3</m>. 
</p></solution>
</exercise>
<exercise><introduction>
<p>La figure <xref ref="fig-regionsadmissibleatrouver"/> représente différentes droites dans le premier quadrant, ainsi que quatre régions identifiées par <m>A,B,C</m> et <m>D</m>.</p>
<figure xml:id="fig-regionsadmissibleatrouver">
<caption>Quatre région du premier quadrant</caption>
<image xml:id="img-regionsadmissibleatrouver">
<description>
Les droites moins x plus trois y égal huit, x plus y égal seize, moins x plus y égal zéro et moins x plus cinq y égal huit sont illustrées dans le premier quadrant. On y voit également quatre régions appelées A,B,C et D.
</description>
<sageplot>
var("y")
g=plot((8+x)/3,(x,0,18),ymax=9,color="blue",legend_label="-x+3y=8")+plot(16-x,(x,0,18),color="red",legend_label="x+y=16")+plot(x,(x,0,18),color="black",legend_label="-x+y=0")+plot((8+x)/5,(x,0,18),color="green",legend_label="-x+5y=16")
g+=text("$A$",(1,2.5), color="black",fontsize=20)+text("$B$",(8,1), color="black",fontsize=20)+text("$C$",(8,4), color="black",fontsize=20)+text("$D$",(8,6.5), color="black",fontsize=20)
g
</sageplot>
</image>
</figure>
</introduction>
<task><introduction><p>On porte le regard sur les quatre régions identifiées dans la figure. On veut écrire des contraintes correspondant à chacune de ces régions.</p></introduction>
<task><statement><p>Écrire les contraintes d'un programme linéaire dont la région admissible correspond à la région <m>A</m> de la figure <xref ref="fig-regionsadmissibleatrouver"/>.</p></statement>
<answer>
<p><md>
<mrow>-x+5y&amp;\geq 8</mrow>
<mrow>-x+y&amp;\geq 0</mrow>
<mrow>-x+3y&amp;\leq 8</mrow>
</md>
avec <m>x\geq 0,y\geq 0</m>.</p>
</answer>
<solution><p>Il y a trois droites délimitant la région <m>A</m>, soit <m>-x+5y= 8,-x+y= 0</m> et <m>-x+3y= 8</m>. Pour les convertir en inégalité, on peut prendre un point dans la région, par exemple <m>(0,2)</m> et déterminer quel sens l'inégalité doit avoir. Puisque <m>-0+5*2=10\geq 8</m>, la première contrainte est <m>-x+5y\geq 8</m>. La deuxième, puisque <m>-0+2=2\geq 0</m>, est <m>-x+y\geq 0</m> et la dernière est <m>-x+3y\leq 8</m>, car <m>-0+3*2=6\leq 8</m>.  </p></solution>
</task>
<task><statement><p>Écrire les contraintes d'un programme linéaire dont la région admissible correspond à la région <m>B</m> de la figure <xref ref="fig-regionsadmissibleatrouver"/>.</p></statement>
<answer>
<p><md>
<mrow>-x+5y&amp;\leq 8</mrow>
<mrow>-x+y&amp;\leq 0</mrow>
<mrow>x+y&amp;\leq 16</mrow>
</md>
avec <m>x\geq 0,y\geq 0</m>.</p>
</answer>
<solution><p>Il y a trois droites délimitant la région <m>B</m>, soit <m>-x+5y= 8,-x+y= 0</m> et <m>x+y=16</m>. Pour les convertir en inégalité, on peut prendre un point dans la région, par exemple <m>(2,0)</m> et déterminer quel sens l'inégalité doit avoir. Puisque <m>-2+5*0=-2\leq 8</m>, la première contrainte est <m>-x+5y\leq 8</m>. La deuxième, puisque <m>-2+0=-2\leq 0</m>, est <m>-x+y\leq 0</m> et la dernière est <m>x+y\leq 16</m>, car <m>2+0=2\leq 16</m>.  </p></solution>
</task>
<task><statement><p>Écrire les contraintes d'un programme linéaire dont la région admissible correspond à la région <m>C</m> de la figure <xref ref="fig-regionsadmissibleatrouver"/>.</p></statement>
<answer>
<p><md>
<mrow>-x+5y&amp;\geq 8</mrow>
<mrow>-x+y&amp;\leq 0</mrow>
<mrow>-x+3y&amp;\leq 8</mrow>
<mrow>x+y&amp;\leq 16</mrow>
</md>
avec <m>x\geq 0,y\geq 0</m>.</p>
</answer>
<solution><p>Il y a quatre droites délimitant la région <m>C</m>, soit <m>-x+5y= 8,-x+y= 0,-x+3y= 8</m> et <m>x+y=16</m>. Pour les convertir en inégalité, on peut prendre un point dans la région, par exemple <m>(6,4)</m> et déterminer quel sens l'inégalité doit avoir. Puisque <m>-6+5*4=14\geq 8</m>, la première contrainte est <m>-x+5y\geq 8</m>. La deuxième, puisque <m>-6+4=-2\leq 0</m>, est <m>-x+y\leq 0</m>. La troisième contrainte est <m>-x+3y\leq 8</m>, car <m>-6+3*4=6\leq 8</m> et la dernière est <m>x+y\leq 16</m>, car <m>6+4=10\leq 16</m>.  </p></solution>
</task>
<task><statement><p>Écrire les contraintes d'un programme linéaire dont la région admissible correspond à la région <m>D</m> de la figure <xref ref="fig-regionsadmissibleatrouver"/>.</p></statement>
<answer>
<p><md>
<mrow>-x+3y&amp;\geq 8</mrow>
<mrow>-x+y&amp;\leq 0</mrow>
<mrow>x+y&amp;\leq 16</mrow>
</md>
avec <m>x\geq 0,y\geq 0</m>.</p>
</answer>
<solution><p>Il y a trois droites délimitant la région <m>D</m>, soit <m>-x+3y= 8,-x+y= 0</m> et <m>x+y=16</m>. Pour les convertir en inégalité, on peut prendre un point dans la région, par exemple <m>(8,6)</m> et déterminer quel sens l'inégalité doit avoir. Puisque <m>-6+3*6=12\geq 8</m>, la première contrainte est <m>-x+3y\geq 8</m>. La deuxième, puisque <m>-8+6=-2\leq 0</m>, est <m>-x+y\leq 0</m> et la dernière est <m>x+y\leq 16</m>, car <m>8+6=14\leq 16</m>.  </p></solution>
</task>
</task>
<task><introduction>
<p>Dans cette partie, on tente de trouver, pour chaque sommet de la région <m>C</m>, une fonction objectif qui a pour valeur optimale le sommet en question.</p>
</introduction>
<task><statement><p>Déterminer une fonction objectif pour laquelle le sommet <m>(2,2)</m> est la seule solution maximale.</p></statement>
<hint><p>S'inspirer de la droite dans la figure <xref ref="fig-simplexe1"/>.</p></hint>
<answer><p>Une réponse possible est <m>f(x,y)=-2x+y</m>.</p></answer>
<solution><p>Une fonction objectif <m>f(x,y)</m> sera optimale au point <m>(2,2)</m> si, pour une valeur <m>k\in\mathbb{R}</m>, la courbe de niveau <m>f(x,y)=k</m> a pour seul intersection avec la région admissible le point <m>C</m>. Ce fait ne garantit pas que l'intersection sera un maximum, mais en prenant <m>g(x,y)=-f(x,y)</m> au besoin, on aura une fonction qui satisfait au problème.</p>
<p>Si le vecteur des coefficients de la fonction objectif était parallèle au vecteur de l'une des contraintes qui sert à déterminer le point <m>(2,2)</m>, alors la totalité du segment composé de l'intersection de la droite formant la contrainte et de la région admissible offrirait une solution optimale au problème. Pour trouver une fonction où le point <m>(2,2)</m> est la seule solution optimale, on change les coefficients de la fonction objectif pour que la droite passant par <m>(2,2)</m> ayant ces coeffcients comme vecteur normal n'ait comme intersection avec la région admissible que le point <m>(2,2)</m> . La figure suivante permet de trouver un tel choix. Par exemple, la fonction <m>f(x,y)=-2x+y</m> atteint son maximum au point <m>(2,2)</m> et celui-ci vaut <m>-2</m>.</p>
<figure xml:id="fig-simplexe2">
        <caption>Fonction objectif optimale aux différents point de la région <m>C</m>.</caption>
        <interactive aspect="1:1" platform="geogebra" width="100%"
        xml:id="geog-simplexe2">
          <slate aspect="1:1.35" source="code/geogebra/simplexe2.ggb"
          surface="geogebra" xml:id="slate-simplexe2">
enableShiftDragZoom(false);
enableRightClick(false);
          </slate>
          <instructions>
            <p>Changer les curseurs <m>a</m> et <m>b</m> pour obtenir une droite différente, qui passe toujours par le point sélectionné par le troisième curseur. Le curseur <m>k</m> translate cette droite de manière à couvrir toute la région admissible. Bouger le point <m>P</m> afin d'y évaluer la fonction <m>f</m> et d'assurer que c'est bien un maximum qui est atteint au point souhaité.</p>
          </instructions>
        </interactive>
      </figure>
</solution>
</task>
<task><statement><p>Déterminer une fonction objectif pour laquelle le sommet <m>(4,4)</m> est la seule solution maximale.</p></statement>
<answer><p>En suivant la démarche de la partie précédente et en utilisant la figure <xref ref="fig-simplexe2"/>, on trouve, par exemple, <m>f_2(x,y)=-x+2y</m>, qui atteint sa valeur maximale <m>4</m> au point <m>(4,4)</m>.</p></answer>
</task>
<task><statement><p>Déterminer une fonction objectif pour laquelle le sommet <m>(10,6)</m> est la seule solution maximale.</p></statement>
<answer><p>En suivant la démarche de la partie précédente et en utilisant la figure <xref ref="fig-simplexe2"/>, on trouve, par exemple, <m>f_2(x,y)=x+2y</m>, qui atteint sa valeur maximale <m>22</m> au point <m>(10,6)</m>.</p></answer>
</task>
<task><statement><p>Déterminer une fonction objectif pour laquelle le sommet <m>(12,4)</m> est la seule solution maximale.</p></statement>
<answer><p>En suivant la démarche de la partie précédente et en utilisant la figure <xref ref="fig-simplexe2"/>, on trouve, par exemple, <m>f_2(x,y)=3x+2y</m>, qui atteint sa valeur maximale <m>44</m> au point <m>(12,4)</m>.</p></answer>
</task>
</task>
</exercise>
<exercisegroup>
<title>Exercices Sage</title>
<introduction><p>Les exercices qui suivent sont conçus pour être résolus avec Sage. Des cellules vides sont disponibles pour écrire les réponses. Évidemment, il y a plusieurs manières d'arriver aux réponses.</p></introduction>
<exercise><statement><p>Résoudre les problème de l'exercice <xref ref="exo-proglin1"/> à l'aide de la commande <c>run_simplex_method</c> et vérifier que la réponse obtenue est la même que celle à l'exercice <xref ref="exo-proglin2"/> ou <xref ref="exo-proglin4"/>.</p>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage></statement>
<solution><listing><caption>Code pour le premier problème</caption>
<program language="Sage">
<input>
A=matrix([[-1,1],[1,5],[1,-7]])
b=vector([0,24,-12])
c=vector([3,2])
P=InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P=P.standard_form()
P.run_simplex_method()
</input>
</program>
</listing>
<listing><caption>Code pour le deuxième problème</caption>
<program language="Sage">
<input>
A=matrix([[-2,1],[-1,1],[2,1],[1,-3]])
b=vector([-5,-1,14,0])
c=vector([1,2])
P=InteractiveLPProblem(A, b, c, ["x", "y"], variable_type=">=")
P=P.standard_form()
P.run_simplex_method()
</input>
</program>
</listing>
<listing><caption>Code pour le troisième problème</caption>
<program language="Sage">
<input>
A=matrix([[-1,2],[3,1],[1,2],[1,-2],[1,2],[3,1]])
b=vector([3,26,12,8,21,38])
c=vector([-2,3])
#Noter l'ajout de l'option "constraint_type" ci-dessous étant donnée la présence de contrainte ">=" dans le problème
P=InteractiveLPProblem(A, b, c, ["x", "y"],constraint_type=["&lt;=",">=",">=","&lt;=","&lt;=","&lt;="], variable_type=">=")
P=P.standard_form()
P.run_simplex_method()
</input>
</program>
</listing>
<listing><caption>Code pour le dernier problème</caption>
<program language="Sage">
<input>
A=matrix([[-2,5],[3,2],[5,-3]])
b=vector([1,27,7])
c=vector([1,1])
#Noter l'ajout de l'option "constraint_type" ci-dessous étant donnée la présence de contrainte ">=" dans le problème et l'ajout de "problem_type="min""
P=InteractiveLPProblem(A, b, c, ["x", "y"],constraint_type=[">=","&lt;=",">="], variable_type=">=",problem_type="min")
P=P.standard_form()
P.run_simplex_method()
</input>
</program>
</listing>
</solution>
</exercise>
<exercise xml:id="exosage-minpivoty"><statement><p>À la sous-section <xref ref="sssec-proglinmin"/>, on a étudié le problème de maximisation
<me>
f(x,y)=-2x-3y
</me>,
qui est sujette aux contraintes
<md>
<mrow>-x-y&amp;\leq -9</mrow>
<mrow>x-y&amp;\leq 1</mrow>
</md>
 dont la matrice initiale du simplexe est
<me>
S=\left(\begin{array}{rrrr|r|r}
-1&amp;-1&amp;1&amp;0&amp;0&amp;-9\\
1&amp;-1&amp;0&amp;1&amp;0&amp;1\\
2&amp;3&amp;0&amp;0&amp;1&amp;0
\end{array}\right)
</me>. Dans le texte, la première étape a été de pivoter selon l'entrée de la première ligne et de la première colonne.</p>
<p>À l'aide de multiplications par des matrices élémentaires, résoudre le problème à nouveau en pivotant, cette fois-ci, selon l'entrée de la première ligne et de la deuxième colonne.</p>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
<sage><input>#Inscrire le code ici</input></sage>
</statement>
<solution>
<p>On définit la matrice initiale du simplexe et on multiplie la première ligne par <m>-1</m> afin de rendre le pivot égal à <m>1</m>.</p>
<sage><input>
S=matrix([[-1,-1,1,0,0,-9],[1,-1,0,1,0,1],[2,3,0,0,1,0]])
S=elementary_matrix(3,row1=0,scale=-1)*S
show(S)
</input></sage>
<p>Pour éliminer les entrées de la deuxième colonne, sous le pivot, on multiplie par deux matrices élémentaires.</p>
<sage><input>
S=matrix([[-1,-1,1,0,0,-9],[1,-1,0,1,0,1],[2,3,0,0,1,0]])
S=elementary_matrix(3,row1=0,scale=-1)*S
show(S)
S=elementary_matrix(3,row1=1,row2=0,scale=1)*elementary_matrix(3,row1=2,row2=0,scale=-3)*S
show(S)
</input></sage>
<p>On remarque que les entrées de la dernière colonne à droite du bloc principal sont maintenant positives et que l'algorithme du simplexe peut commencer. L'unique entrée négative sous le bloc principal est à la première colonne. Selon l'algorithme, la deuxième ligne est choisie pour pivoter. On la divise par <m>2</m> pour rendre le pivot égal à <m>1</m> et l'on multiplie par les matrices élémentaires permettant d'éliminer les autres entrées de la colonne.</p>
<sage><input>
S=elementary_matrix(3,row1=2,row2=1,scale=1)*elementary_matrix(3,row1=0,row2=1,scale=-1)*elementary_matrix(3,row1=1,scale=1/2)*S
show(S)
</input></sage>
<p>L'algorithe se termine, la solution optimale est <m>-22</m>, atteinte lorsque <m>x=5</m> et <m>y=4</m>.</p>
</solution>
</exercise>
<exercise><introduction><p>Une compagnie forestière effectuant de la coupe responsable possède deux sites de coupe et trois usines de transformations. La figure suivante représente la capacité de production de chaque site et la capacité de transformation de chaque usine, en millions de PMP par année (le PMP est une unité de mesure utilisée dans l'industrie. Un PMP correspond à un pied mesure de planche équivalant à 12 pouces par 12 pouces par un 1 pouce.), ainsi que les coûts associés aux transports des sites aux usines, en millions de dollars par année. </p></introduction>
<task><statement><p>La compagnie souhaite minimiser ses coûts reliés au transport des marchandises. Dans cette situation, on veut que tout le bois coupé soit envoyé aux différentes usines. On aura donc deux contraintes d'égalité pour représenter le bois quittant chacun des sites de coupe. </p>
<p>Traduire ce système sous forme canonique et l'écrire sur Sage.</p>
<sage>
<input>
#Inscrire le code ici
</input>
</sage>
</statement>
<solution><p>
Le code suivant permet d'écrire le problème sous forme canonique. La variable <m>U_{ij}</m> représente la quantité de bois provenant du site de coupe <m>i</m> et allant vers l'usine <m>j</m>.
</p>
<listing><caption>La forme canonique du problème</caption>
<program language="Sage">
<input>
A = matrix([[1, 1, 1, 0, 0, 0],[-1, -1, -1, 0, 0, 0],[ 0, 0, 0, 1, 1, 1],[ 0, 0, 0, -1, -1, -1],[ 1, 0, 0, 1, 0, 0],[ 0, 1, 0, 0, 1, 0],[ 0, 0, 1, 0, 0, 1]])
b = vector([150,-150, 275,-275, 160, 140, 170,])
c = vector([2,2,3,1,3,1])
P=InteractiveLPProblem(A, b, c, ["U11", "U12","U13","U21","U22","U23"], variable_type=">=",problem_type="min")
P=P.standard_form()
%display typeset
P
</input>
</program>
</listing>
</solution>
</task>
<task><statement><p>De quelle manière la compagnie devrait-elle effectuer le transport entre les sites de coupe et les usines de transformation? Quel est le coût associé à cette répartition des ressources?</p>
<sage>
<input>
#Inscrire le code ici
</input>
</sage>
</statement>
<solution><p>
Le code suivant permet de trouver la solution optimale.
</p>
<listing><caption>La forme canonique du problème</caption>
<program language="Sage">
<input>
A = matrix([[1, 1, 1, 0, 0, 0],[-1, -1, -1, 0, 0, 0],[ 0, 0, 0, 1, 1, 1],[ 0, 0, 0, -1, -1, -1],[ 1, 0, 0, 1, 0, 0],[ 0, 1, 0, 0, 1, 0],[ 0, 0, 1, 0, 0, 1]])
b = vector([150,-150, 275,-275, 160, 140, 170,])
c = vector([2,2,3,1,3,1])
P=InteractiveLPProblem(A, b, c, ["U11", "U12","U13","U21","U22","U23"], variable_type=">=",problem_type="min")
P=P.standard_form()
%display typeset
show(P.optimal_solution())
show(c*P.optimal_solution())
</input>
</program>
</listing>
<p>On constate que, pour <m>575</m> millions de dollar, la compagnie minimise ses coûts de tranports quand elle envoie du premier site de coupe <m>55</m> millions de PMP vers l'usine <m>1</m> et <m>95</m> millions de PMP vers l'usine <m>B</m> ainsi que <m>105</m> millions de PMP à l'usine <m>1</m> et <m>170</m> vers l'usine <m>3</m> provenant du deuxième site de coupe.</p>
</solution>
</task>
</exercise>
<exercise><statement><p>Une compagnie fabrique trois types de produit, de qualité inférieure, moyenne et supérieure. Un produit de qualité inférieure rapporte <m>25</m> dollars à la compagnie, contre <m>45</m> dollars pour une produit de qualité moyenne et <m>50</m> dollars pour une produit de qualité supérieure. La durée de vie moyenne de ces produits est, respectivement, de <m>2,4</m> et <m>9</m> ans. Une nouvelle loi vient de proclamer que l'ensemble des produits de ce type doivent avoir une durée de vie moyenne  égale à <m>4</m> ans. Pour produire le produit de qualité inférieure, les travailleurs ont besoin de <m>1</m> minute, ils ont besoin de <m>3</m> minutes pour un produit de qualité moyenne et, finalement, <m>5</m> minutes sont nécessaires pour un produit de qualité supérieure. Quel est le profit maximum que la compagnie peut espérer recevoir par journée typique de travail de <m>480</m> minutes?</p>
<sage>
<input>
#Inscrire le code ici
</input>
</sage>
</statement>
<solution><p>Soit <m>x,y,z</m>, le nombre de produits de qualité inférieure,moyenne et supérieure, respectivement. La durée de vie moyenne de ces produits est
<m>
\frac{2x+4y+9z}{x+y+z}
</m>. Si cette moyenne doit être plus grand ou égale à <m>4</m>, on peut réécrire la moyenne sous la forme
<me>
2x+4y+9z\geq 4x+4y+4z
</me>, qui devient <m>-2x+0y+5z\geq 0</m>. Avec la contrainte de temps, le problème peut être écrit sur Sage de la manière suivante.</p>
<sage>
<input>
A = matrix([[-2,0,5],[1,3,5]])
b = vector([0,480])
c = vector([25,45,50])
P=InteractiveLPProblem(A, b, c, ["x","y","z"], variable_type=">=",constraint_type=[">=","&lt;="],problem_type="max")
%display typeset
P
</input>
</sage>
<p>La solution optimale est obtenue lorsque le nombre de produits de qualité inférieure est égale à <m>160</m> et le nombre de produits de qualité supérieure est de <m>64</m>. Aucun produit de qualité moyenne n'est produit. Dans ce cas, on obtient un revenu optimal de <m>7200</m> dollars.</p>
</solution>
</exercise>
<exercise><statement><p>Un promoteur possède un immense terrain de <m>2</m> kilomètres carrés sur lequel il veut exploiter trois types de service. Un petit commerce rapporte <m>3500</m> dollars par mois, une grande surface rapporte <m>8000</m> dollar par mois et un logement rapporte <m>1500</m> dollars par mois. Il peut y avoir <m>2000</m> petits commerces par kilomètre carré, <m>90</m> grandes surfaces par kilomètre carré ou <m>10000</m> logements par kilomètre carré. Afin de pouvoir assurer la circulation, le stationnement et autres infrastructure, la superficie totale des trois types de services offert ne peut excéder <m>35</m>% de la superficie totale du terrain. De plus, le réglement de zonage demande à ce qu'au moins <m>1500</m> logements soient construits. Finalement, des coûts d'entretien sont associés pour chaque type de services. Un petit commerce entraine un coût de <m>200</m> dollars par mois, une grande surface coûte <m>300</m> dollars par mois et un logement a des coûts mensuels de <m>100</m> dollars. Le budget du promoteur est de <m>350000</m> dollars par mois.</p>
<p>Comment le promoteur devrait-il répartir les types de service de manière à optimiser ses revenus?</p>
</statement>
<solution><p>
Ce problème comporte trois contraintes. On note <m>P,G,L</m>, le nombre de chacun des trois types de service, avec <m>P</m> pour le nombre de petits commerces, <m>G</m> pour le nombre de grande surface et <m>L</m> pour le nombre de logements.
</p>
<p>La contrainte sur la superficie peut s'écrire sous la forme
<me>
\frac{1}{2000}P+\frac{1}{90}G+\frac{1}{10000}L\leq 0.7
</me>,,
la contrainte sur le nombre de logement est <m>L\geq 3000</m> et la contrainte de budget pour l'entretien est
<me>
200P+300G+100L\leq 350000
</me>.
On inscrit dans Sage ces paramètres, sous la forme de la matrice et des vecteurs nécessaires à la création d'un problème de programmation linéaire.
</p>
<sage>
<input>
A=matrix([[1/2000,1/90,1/10000],[0,0,1],[200,300,100]])
b=vector([0.7,3000,350000])
c=vector([3500,8000,1500])
P=InteractiveLPProblem(A, b, c, ["P","G","L"], variable_type=">=",constraint_type=["&lt;=",">=","&lt;="],problem_type="max")
P.optimal_solution()
</input>
</sage>
Comme on ne peut construire une portion de commerce, on choisit de construire <m>210</m> petits commerces, <m>26</m> grandes surfaces ainsi que les <m>3000</m> logements demandés par la règlementation. En réalité, il serait possible d'augmenter davantage certains type de commerces tout en satisfaisant l'ensemble des contraintes. C'est un des défaut de l'algorithme du simplexe, lorsque la solution retournée n'est pas applicable. 
</solution>
</exercise>
</exercisegroup>
</exercises>
